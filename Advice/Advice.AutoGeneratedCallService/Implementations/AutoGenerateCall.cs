using System;
using System.Collections.Generic;
using System.Reflection;
using System.Threading.Tasks;
using Advice.AutoGeneratedCallService.Contracts;
using Advice.Logging;
using Advice.Logging.Contracts;
using Advice.Logging.Models;

namespace Advice.AutoGeneratedCallService.Implementations
{
    public class AutoGenerateCall : IAutoGenerateCall
    {
        private readonly INoaAutoGenerateCallService _noaAutoGenerateCallService;
        private readonly INonNoaAutoGenerateCallService _nonNoaAutoGenerateCallService;
        public static readonly IElkLog Log = ElkLogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);
        public AutoGenerateCall(INoaAutoGenerateCallService noaAutoGenerateCallService, INonNoaAutoGenerateCallService nonNoaAutoGenerateCallService)
        {
            _noaAutoGenerateCallService = noaAutoGenerateCallService;
            _nonNoaAutoGenerateCallService = nonNoaAutoGenerateCallService;
        }

        public void Run()
        {
            RunNoaAutoGeneratedCallService();

            RunNonNoaAutoGeneratedCallService();
        }

        private void RunNonNoaAutoGeneratedCallService()
        {
            try
            {
                Log.Info(new InfoLogRequest()
                {
                    IndexType = ElkIndexTypeProvider.NonNoaGeneratedCalls,
                    Message = "Non NOA Auto generated call service started"
                });

                _nonNoaAutoGenerateCallService.GenerateTasks();

                Log.Info(new InfoLogRequest()
                {
                    IndexType = ElkIndexTypeProvider.NonNoaGeneratedCalls,
                    Message = "Non NOA Auto generated call service ended"
                });
            }
            catch (Exception ex)
            {
                Log.Info(new InfoLogRequest()
                {
                    IndexType = ElkIndexTypeProvider.NonNoaGeneratedCalls,
                    Message = string.Format("NON-NOA auto generated call service aborted due to exception occurred. The exception's message is {0}", ex),
                });

                Log.LogException(new ExceptionLogRequest()
                {
                    Exception = ex,
                    AdditionalMessage =
                        string.Format(
                            "NON-NOA auto generated call service aborted due to exception occurred. The exception's message is {0}",
                            ex.Message),
                    User = "System"
                });
               
            }
        }

        private void RunNoaAutoGeneratedCallService()
        {
            try
            {
                Log.Info(new InfoLogRequest()
                {
                    IndexType = ElkIndexTypeProvider.NoaGeneratedCalls,
                    Message = "NOA Auto generated call service started"
                });

                _noaAutoGenerateCallService.GenerateTasks();

                Log.Info(new InfoLogRequest()
                {
                    IndexType = ElkIndexTypeProvider.NoaGeneratedCalls,
                    Message = "NOA Auto generated call service ended"
                });
            }
            catch (Exception ex)
            {
                Log.Info(new InfoLogRequest()
                {
                    IndexType = ElkIndexTypeProvider.NoaGeneratedCalls,
                    Message = string.Format("NOA auto generated call service aborted due to exception occurred. The exception's message is {0}", ex)
                });

                Log.LogException(new ExceptionLogRequest()
                {
                    Exception = ex,
                    AdditionalMessage =
                        string.Format(
                            "NOA auto generated call service aborted due to exception occurred. The exception's message is {0}",
                            ex.Message),
                    User = "System"
                });
            }
        }
    }
}
