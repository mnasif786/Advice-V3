//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Advice.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Advice.Domain.Entities;
    using Action = Advice.Domain.Entities.Action; 
    
    public partial class AdviceEntities : DbContext
    {
        public AdviceEntities()
            : base("name=AdviceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TaskAction> TaskActions { get; set; }
        public virtual DbSet<TaskArchive> TaskArchives { get; set; }
        public virtual DbSet<TaskDocument> TaskDocuments { get; set; }
        public virtual DbSet<TaskJob> TaskJobs { get; set; }
        public virtual DbSet<TaskType> TaskTypes { get; set; }
        public virtual DbSet<TaskTypeSLA> TaskTypeSLAs { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<BusinessWiseNatureOfAdviceGroup> BusinessWiseNatureOfAdviceGroups { get; set; }
        public virtual DbSet<TaskModifyingReason> TaskModifyingReasons { get; set; }
        public virtual DbSet<TaskModifyingReasonGroup> TaskModifyingReasonGroups { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<PermissionRole> PermissionRoles { get; set; }
        public virtual DbSet<ReassignTaskEvent> ReassignTaskEvents { get; set; }
        public virtual DbSet<Action> Actions { get; set; }
        public virtual DbSet<ActionTypeGroup> ActionTypeGroups { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<ActionType> ActionTypes { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<CorporatePriority> CorporatePriorities { get; set; }
        public virtual DbSet<MaintenancePermission> MaintenancePermissions { get; set; }
        public virtual DbSet<MaintenanceUserPermission> MaintenanceUserPermissions { get; set; }
        public virtual DbSet<ServiceReviewServiceCanGroup> ServiceReviewServiceCanGroups { get; set; }
        public virtual DbSet<ServiceReviewServiceSchedule> ServiceReviewServiceSchedules { get; set; }
        public virtual DbSet<NatureOfAdvice> NatureOfAdvices { get; set; }
        public virtual DbSet<NatureOfAdviceGroup> NatureOfAdviceGroups { get; set; }
    
        public virtual ObjectResult<CorporatePriorityByCansQueryResult> CorporatePriorityByCansQuery(string cansExpression)
        {
            var cansExpressionParameter = cansExpression != null ?
                new ObjectParameter("CansExpression", cansExpression) :
                new ObjectParameter("CansExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CorporatePriorityByCansQueryResult>("CorporatePriorityByCansQuery", cansExpressionParameter);
        } 
    }
}
