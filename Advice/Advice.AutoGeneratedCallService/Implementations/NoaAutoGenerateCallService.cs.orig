using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Advice.AutoGeneratedCallService.Contracts;
using Advice.Domain.Entities;
using Advice.Domain.RepositoryContracts;

namespace Advice.AutoGeneratedCallService.Implementations
{
    public class AutoGeneratedCallTask
    { 
    }

    public class NoaAutoGenerateCallService : INoaAutoGenerateCallService
    {
        private ITaskRepository _taskRepository;
        private IJobRepository _jobRepository;

        public NoaAutoGenerateCallService(IJobRepository jobRepository, ITaskRepository taskRepository)
        {
            _taskRepository = taskRepository;
            _jobRepository = jobRepository;
        }

        public void GenerateTasks()
        {
            throw new NotImplementedException();

            List<Job> joblist = GetJobs();

            foreach (Job job in joblist)
            {
                AutoGeneratedCallTask autoGenTask = CreateNewCallbackTask(job);
                AddTask(autoGenTask);
            }
        }

        private List<Job> GetJobs()
        {
            throw new NotImplementedException();
            // Get NOA tasks where
            //  job is open
            //      - and job (last related action date + 7 days) < Now
            //      - and job.NatureOfAdviceGroup is in list
            //          - Capabaility
            //          - Grievance
            //          - Redundancy
            //          - SOSR
            //          - Conduct
            // OR
            // Job is open
            //      AND  job.last related action date + 2 days < Now
            //      AND NOA type = Suspension (CON06)
        }

        private AutoGeneratedCallTask CreateNewCallbackTask(Job job)
        {
            throw new NotImplementedException();
        }

        private void AddTask(AutoGeneratedCallTask autoGenTask)
        {
            throw new NotImplementedException();
        }
    }
}
